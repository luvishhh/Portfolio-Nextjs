// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that provides design recommendations based on existing project styles.
 *
 * - generateDesignRecommendations - A function that handles the design recommendation process.
 * - GenerateDesignRecommendationsInput - The input type for the generateDesignRecommendations function.
 * - GenerateDesignRecommendationsOutput - The return type for the generateDesignRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateDesignRecommendationsInputSchema = z.object({
  projectStyleDescription: z
    .string()
    .describe('A detailed description of the existing project\u2019s style, including colors, typography, layout, and any unique design elements.'),
  desiredNumberOfRecommendations: z
    .number()
    .default(3)
    .describe('The number of design recommendations to generate.'),
});

export type GenerateDesignRecommendationsInput = z.infer<
  typeof GenerateDesignRecommendationsInputSchema
>;

const GenerateDesignRecommendationsOutputSchema = z.object({
  recommendations: z
    .array(z.string())
    .describe('A list of design recommendations based on the provided project style description.'),
});

export type GenerateDesignRecommendationsOutput = z.infer<
  typeof GenerateDesignRecommendationsOutputSchema
>;

export async function generateDesignRecommendations(
  input: GenerateDesignRecommendationsInput
): Promise<GenerateDesignRecommendationsOutput> {
  return generateDesignRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateDesignRecommendationsPrompt',
  input: {schema: GenerateDesignRecommendationsInputSchema},
  output: {schema: GenerateDesignRecommendationsOutputSchema},
  prompt: `You are an expert design consultant. Analyze the following project style description and provide {{desiredNumberOfRecommendations}} design recommendations to maintain a consistent and visually appealing portfolio.

Project Style Description: {{{projectStyleDescription}}}

Recommendations:`, // Ensure this aligns with the output schema.
});

const generateDesignRecommendationsFlow = ai.defineFlow(
  {
    name: 'generateDesignRecommendationsFlow',
    inputSchema: GenerateDesignRecommendationsInputSchema,
    outputSchema: GenerateDesignRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
